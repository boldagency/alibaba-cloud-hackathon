// BREAKPOINTS
$screen-small: 576px;
$screen-medium: 768px;
$screen-large: 992px;
$screen-extra-large: 1228px;
$screen-desktop: 1380px;

@mixin smallHeightLargeScreen {
  @media screen and (min-width: 992px) and (max-height: 840px) {
    @content;
  }
}

@mixin smallHeightPC {
  @media screen and (min-width: 1380px) and (max-height: 880px) {
    @content;
  }
}

@mixin appGrid {
  display: grid;
  grid-template-columns: repeat(6, 1fr);
  grid-column-gap: 10px;

  @media screen and (min-width: #{$screen-large}) {
    grid-template-columns: repeat(12, 1fr);
    grid-column-gap: 25px;
  }
}

@mixin fullVertical {
  grid-column-start: 1;
  grid-column-end: 7;

  @media screen and (min-width: #{$screen-large}) {
    grid-column-end: 13;
  }
}

@mixin fullAbsolute {
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
}

@mixin flexCenter {
  display: flex;
  align-items: center;
  justify-content: center;
}

@mixin srOnly {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  border: 0;
}

@mixin before($content: "") {
  &:before {
    content: $content;
    @content;
  }
}

@mixin after($content: "") {
  &:after {
    content: $content;
    @content;
  }
}

@mixin hoverUnderline($underlineColor: var(--main-color)) {
  position: relative;

  @include after {
    position: absolute;
    right: 0;
    bottom: -5px;
    left: 0;
    display: inline-block;
    height: 1px;
    background: $underlineColor;
    transform: scale3d(0, 1, 1);
    transform-origin: right;
    transition: transform 0.65s var(--primary-curve);
  }

  &:hover:after {
    @media screen and (min-width: #{$screen-large}) {
      transform: var(--base-scale3d);
      transform-origin: left;
    }
  }
}


.container-space {
  padding-inline-start: var(--page-space-x);
  padding-inline-end: var(--page-space-x);
}

.container-space-left {
  padding-inline-start: var(--page-space-x);
}

.container-space-min-left {
  padding-inline-start: 2vw;

  @media all and (max-width:800px) {
    padding-inline-start: 0vw;
  }
}

.container-space-right {
  padding-inline-end: var(--page-space-x);
}

.container-space-min-right {
  padding-inline-end: 2vw;
  @media all and (max-width:800px) {
    padding-inline-end: 0vw;
  }
}

.section-space {
  padding-top: var(--section-space);
  padding-bottom: var(--section-space);
}

.section-space-extra {
  padding-top: var(--section-space-extra);
  padding-bottom: var(--section-space-extra);
}

.font-bold {
  font-weight: bold;
}

.font-light {
  font-weight: 100;
}

.font-medium {
  font-weight: 500;
}

.cta {
  border: 1px solid;
  border-radius: 8px;
  font-weight: 400;
  font-family: "Alibaba Sans-Medium";
  display: flex;
  align-items: center;
  height: 45px;
  padding: 8px 15px;
  cursor: pointer;
  font-size: 13px;
  line-height: 16px;

  &:disabled {
    opacity: 0.5;
    pointer-events: none ;
  }

  .arrow {
    --arrow-color: #fff;
    width: 15px;
    height: 2px;
    background-color: var(--arrow-color);
    display: inline-block;
    position: relative;
    margin-inline-end: 20px;
    transition: all ease 0.3s;

    &:after {
      content: "";
      height: 10px;
      width: 10px;
      top: -5px;
      right: 0;
      border-color: var(--arrow-color);
      border-style: solid;
      border-width: 2.5px 2.5px 0 0;
      transform: rotate(45deg);
      position: absolute;
    }
  }

  &:hover {
    .arrow {
      width: 20px;
      margin-inline-end: 15px;

    }
  }
}

.cta-primary {
  @extend .cta;
  background-color: var(--orange);
  border: 1px solid var(--orange);
  color: #fff;
}

.cta-white {
  @extend .cta;
  background-color: #fff;
  border: 1px solid #fff;
  color: var(--orange);
}


.cta-secondary {
  @extend .cta;
  background-color: #fff;
  border: 1px solid #fff !important;
  color: var(--black);
  .arrow {
    --arrow-color: var(--black);
    }
}

.cta-outline {
  @extend .cta;
  background-color: transparent;
  border: 1px solid #fff;
  color: #fff;
  .arrow {
  --arrow-color: #fff;

  }
  
}